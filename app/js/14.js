"use strict";(self.webpackChunkwebpack_setup=self.webpackChunkwebpack_setup||[]).push([[14,633,395],{1135:(e,t,o)=>{o.d(t,{E:()=>i,G:()=>s});var r=o(738),n=o(6575),c=o(1863);r.Ay.registerPlugin(n.u);const l=r.Ay.matchMedia(),i=(e,t)=>{(0,c.jo)(t,"_is-active"),t[e]&&t[e].classList.add("_is-active")},s=()=>{document.querySelector(".item-card__swiper")&&l.add("(min-width: 1024px)",(()=>{const e=document.querySelectorAll(".item-card__thumbs-slide");document.querySelectorAll(".item-card__slide").forEach(((t,o)=>{r.Ay.timeline({scrollTrigger:{trigger:t,start:"top top",end:"bottom bottom",onEnter:t=>{i(o,e)},onEnterBack:t=>{i(o,e)}}})}))}))}},7633:(e,t,o)=>{o.r(t),o.d(t,{locoScroll:()=>i,toggleScroll:()=>s});var r=o(6383),n=o(738),c=o(1135),l=o(6575);n.Ay.registerPlugin(l.u);const i=new r.Ay({el:document.querySelector(".wrapper"),smooth:!0,mobile:{smooth:!1},tablet:{smooth:!1,breakpoint:1025}});new ResizeObserver((()=>{setTimeout((()=>{i.destroy(),i.update(),i.init()}),100)})).observe(document.querySelector("main"));const s={touchStart:()=>{i.stop()},touchEnd:()=>{i.start()}};window.addEventListener("load",(function(){l.u.scrollerProxy(i.el,{scrollTop(e){return arguments.length?i.scrollTo(e,0,0):i.scroll.instance.scroll.y},getBoundingClientRect:()=>({top:0,left:0,width:window.innerWidth,height:window.innerHeight}),pinType:i.el.style.transform?"transform":"fixed"}),l.u.addEventListener("refresh",(()=>i.update())),l.u.defaults({scroller:i.el}),setTimeout((()=>{l.u.refresh(),l.u.update()}),0),(0,c.G)(),setTimeout((()=>{i.update()}),1e3)})),window.addEventListener("resize",(function(){i.update()})),document.addEventListener("mouseover",(function(e){e.target.closest("[data-sb]")?i.stop():i.start()})),document.querySelector(".footer-main__anchor")&&document.querySelector(".footer-main__anchor").addEventListener("click",(function(){i.scrollTo(0)})),document.querySelectorAll(".item-card__slide").length&&document.querySelectorAll(".item-card__slide").forEach(((e,t)=>{document.querySelectorAll(".item-card__thumbs-slide")[t].addEventListener("click",(function(){window.innerWidth>1024&&i.scrollTo(e,{offset:-1,callback:()=>{(0,c.E)(t,document.querySelectorAll(".item-card__thumbs-slide"))}})}))})),document.addEventListener("bodyLock",(function(){i.stop()})),document.addEventListener("bodyUnlock",(function(){i.start()}))},1863:(e,t,o)=>{o.d(t,{jo:()=>r});const r=(e,t)=>{for(var o=0;o<e.length;o++)e[o].classList.remove(t)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,