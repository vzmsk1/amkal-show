"use strict";(self.webpackChunkwebpack_setup=self.webpackChunkwebpack_setup||[]).push([[14,633,395],{1135:(e,t,o)=>{o.d(t,{E:()=>s});var c=o(738),n=o(6575),r=o(1863);c.Ay.registerPlugin(n.u);c.Ay.matchMedia();const s=(e,t)=>{(0,r.jo)(t,"_is-active"),t[e]&&t[e].classList.add("_is-active")}},7633:(e,t,o)=>{o.r(t),o.d(t,{locoScroll:()=>d,toggleScroll:()=>l});var c=o(6383),n=o(738),r=o(1135),s=o(6575);n.Ay.registerPlugin(s.u);const d=new c.Ay({el:document.querySelector(".wrapper"),smooth:!0,mobile:{smooth:!1},tablet:{smooth:!1,breakpoint:1025}}),l={touchStart:()=>{d.stop()},touchEnd:()=>{d.start()}};window.addEventListener("load",(function(){})),window.addEventListener("resize",(function(){d.update()})),document.addEventListener("mouseover",(function(e){e.target.closest("[data-sb]")?d.stop():d.start()})),document.querySelector(".footer-main__anchor")&&document.querySelector(".footer-main__anchor").addEventListener("click",(function(){d.scrollTo(0)})),document.querySelectorAll(".item-card__slide").length&&document.querySelectorAll(".item-card__slide").forEach(((e,t)=>{document.querySelectorAll(".item-card__thumbs-slide")[t].addEventListener("click",(function(){window.innerWidth>1024&&d.scrollTo(e,{offset:-1,callback:()=>{(0,r.E)(t,document.querySelectorAll(".item-card__thumbs-slide"))}})}))})),document.addEventListener("bodyLock",(function(){d.stop()})),document.addEventListener("bodyUnlock",(function(){d.start()}))},1863:(e,t,o)=>{o.d(t,{jo:()=>c});const c=(e,t)=>{for(var o=0;o<e.length;o++)e[o].classList.remove(t)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,