"use strict";(self.webpackChunkwebpack_setup=self.webpackChunkwebpack_setup||[]).push([[691],{691:(e,t,a)=>{a.r(t),document.querySelectorAll(".quantity").forEach((e=>{const t=e.querySelector(".quantity__input"),a=e.querySelector(".quantity__count_minus"),u=e.querySelector(".quantity__count_add"),r=parseInt(t.min),i=parseInt(t.max),n=new RegExp(/(^\d*$)|(Backspace|Tab|Delete|ArrowLeft|ArrowRight)/);t.addEventListener("keypress",(function(e){!e.key.match(n)&&e.preventDefault()})),t.addEventListener("change",(function(){const e=parseInt(t.value);isNaN(e)||e<=r?(t.value=r,a.removeAttribute("disabled"),u.removeAttribute("disabled")):(a.removeAttribute("disabled"),e>=i?(t.value=i,u.setAttribute("disabled","")):(t.value=e,u.removeAttribute("disabled")))})),e.addEventListener("click",(function(e){if(e.target.closest(".quantity__count")){const n=e.target.closest(".quantity__count").dataset.action;let s=parseInt(t.value);"add"===n?(s+=1,s>=r+1&&u.removeAttribute("disabled"),s>=i&&u.setAttribute("disabled","")):(s=s<=r?r:s-=1,s===r&&a.setAttribute("disabled",""),s<i&&a.removeAttribute("disabled")),t.value=s}}))}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianMvNjkxLmFwcC5qcyIsIm1hcHBpbmdzIjoibUhBR0VBLFNBQVNDLGlCQUFpQixhQUFhQyxTQUFTQyxJQUM5QyxNQUFNQyxFQUFRRCxFQUFHRSxjQUFjLG9CQUN6QkMsRUFBV0gsRUFBR0UsY0FBYywwQkFDNUJFLEVBQVNKLEVBQUdFLGNBQWMsd0JBQzFCRyxFQUFTQyxTQUFTTCxFQUFNTSxLQUN4QkMsRUFBU0YsU0FBU0wsRUFBTVEsS0FDeEJDLEVBQVEsSUFBSUMsT0FDaEIsdURBR0ZWLEVBQU1XLGlCQUFpQixZQUFZLFNBQVVDLElBQzFDQSxFQUFFQyxJQUFJQyxNQUFNTCxJQUFVRyxFQUFFRyxnQkFDM0IsSUFFQWYsRUFBTVcsaUJBQWlCLFVBQVUsV0FDL0IsTUFBTUssRUFBTVgsU0FBU0wsRUFBTWlCLE9BRXZCQyxNQUFNRixJQUFRQSxHQUFPWixHQUN2QkosRUFBTWlCLE1BQVFiLEVBQ2RGLEVBQVNpQixnQkFBZ0IsWUFDekJoQixFQUFPZ0IsZ0JBQWdCLGNBRXZCakIsRUFBU2lCLGdCQUFnQixZQUVyQkgsR0FBT1QsR0FDVFAsRUFBTWlCLE1BQVFWLEVBQ2RKLEVBQU9pQixhQUFhLFdBQVksTUFFaENwQixFQUFNaUIsTUFBUUQsRUFDZGIsRUFBT2dCLGdCQUFnQixhQUc3QixJQUVBcEIsRUFBR1ksaUJBQWlCLFNBQVMsU0FBVUMsR0FDckMsR0FBSUEsRUFBRVMsT0FBT0MsUUFBUSxvQkFBcUIsQ0FDeEMsTUFDTUMsRUFEU1gsRUFBRVMsT0FBT0MsUUFBUSxvQkFDUkUsUUFBUUMsT0FDaEMsSUFBSVQsRUFBTVgsU0FBU0wsRUFBTWlCLE9BRVIsUUFBYk0sR0FDRlAsR0FBTyxFQUVIQSxHQUFPWixFQUFTLEdBQ2xCRCxFQUFPZ0IsZ0JBQWdCLFlBR3JCSCxHQUFPVCxHQUNUSixFQUFPaUIsYUFBYSxXQUFZLE1BR2xDSixFQUFNQSxHQUFPWixFQUFTQSxFQUFVWSxHQUFPLEVBRW5DQSxJQUFRWixHQUNWRixFQUFTa0IsYUFBYSxXQUFZLElBR2hDSixFQUFNVCxHQUNSTCxFQUFTaUIsZ0JBQWdCLGFBSTdCbkIsRUFBTWlCLE1BQVFELENBQ2hCLENBQ0YsR0FBRSxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2VicGFjay1zZXR1cC8uL3NyYy9qcy91dGlscy9xdWFudGl0eS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCIuLi8uLi9zY3NzL2NvbW1vbi9xdWFudGl0eS5zY3NzXCI7XG5cbmZ1bmN0aW9uIGluaXRRdWFudGl0eSgpIHtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5xdWFudGl0eVwiKS5mb3JFYWNoKChlbCkgPT4ge1xuICAgIGNvbnN0IGlucHV0ID0gZWwucXVlcnlTZWxlY3RvcihcIi5xdWFudGl0eV9faW5wdXRcIik7XG4gICAgY29uc3QgbWludXNCdG4gPSBlbC5xdWVyeVNlbGVjdG9yKFwiLnF1YW50aXR5X19jb3VudF9taW51c1wiKTtcbiAgICBjb25zdCBhZGRCdG4gPSBlbC5xdWVyeVNlbGVjdG9yKFwiLnF1YW50aXR5X19jb3VudF9hZGRcIik7XG4gICAgY29uc3QgcXR5TWluID0gcGFyc2VJbnQoaW5wdXQubWluKTtcbiAgICBjb25zdCBxdHlNYXggPSBwYXJzZUludChpbnB1dC5tYXgpO1xuICAgIGNvbnN0IHJlZ2V4ID0gbmV3IFJlZ0V4cChcbiAgICAgIC8oXlxcZCokKXwoQmFja3NwYWNlfFRhYnxEZWxldGV8QXJyb3dMZWZ0fEFycm93UmlnaHQpLyxcbiAgICApO1xuXG4gICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXByZXNzXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAhZS5rZXkubWF0Y2gocmVnZXgpICYmIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcblxuICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgY29uc3QgcXR5ID0gcGFyc2VJbnQoaW5wdXQudmFsdWUpO1xuXG4gICAgICBpZiAoaXNOYU4ocXR5KSB8fCBxdHkgPD0gcXR5TWluKSB7XG4gICAgICAgIGlucHV0LnZhbHVlID0gcXR5TWluO1xuICAgICAgICBtaW51c0J0bi5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKTtcbiAgICAgICAgYWRkQnRuLnJlbW92ZUF0dHJpYnV0ZShcImRpc2FibGVkXCIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbWludXNCdG4ucmVtb3ZlQXR0cmlidXRlKFwiZGlzYWJsZWRcIik7XG5cbiAgICAgICAgaWYgKHF0eSA+PSBxdHlNYXgpIHtcbiAgICAgICAgICBpbnB1dC52YWx1ZSA9IHF0eU1heDtcbiAgICAgICAgICBhZGRCdG4uc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIiwgXCJcIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaW5wdXQudmFsdWUgPSBxdHk7XG4gICAgICAgICAgYWRkQnRuLnJlbW92ZUF0dHJpYnV0ZShcImRpc2FibGVkXCIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgIGlmIChlLnRhcmdldC5jbG9zZXN0KFwiLnF1YW50aXR5X19jb3VudFwiKSkge1xuICAgICAgICBjb25zdCB0YXJnZXQgPSBlLnRhcmdldC5jbG9zZXN0KFwiLnF1YW50aXR5X19jb3VudFwiKTtcbiAgICAgICAgY29uc3Qgb3BlcmF0b3IgPSB0YXJnZXQuZGF0YXNldC5hY3Rpb247XG4gICAgICAgIGxldCBxdHkgPSBwYXJzZUludChpbnB1dC52YWx1ZSk7XG5cbiAgICAgICAgaWYgKG9wZXJhdG9yID09PSBcImFkZFwiKSB7XG4gICAgICAgICAgcXR5ICs9IDE7XG5cbiAgICAgICAgICBpZiAocXR5ID49IHF0eU1pbiArIDEpIHtcbiAgICAgICAgICAgIGFkZEJ0bi5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAocXR5ID49IHF0eU1heCkge1xuICAgICAgICAgICAgYWRkQnRuLnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsIFwiXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBxdHkgPSBxdHkgPD0gcXR5TWluID8gcXR5TWluIDogKHF0eSAtPSAxKTtcblxuICAgICAgICAgIGlmIChxdHkgPT09IHF0eU1pbikge1xuICAgICAgICAgICAgbWludXNCdG4uc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIiwgXCJcIik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHF0eSA8IHF0eU1heCkge1xuICAgICAgICAgICAgbWludXNCdG4ucmVtb3ZlQXR0cmlidXRlKFwiZGlzYWJsZWRcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaW5wdXQudmFsdWUgPSBxdHk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufVxuaW5pdFF1YW50aXR5KCk7XG4iXSwibmFtZXMiOlsiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsImVsIiwiaW5wdXQiLCJxdWVyeVNlbGVjdG9yIiwibWludXNCdG4iLCJhZGRCdG4iLCJxdHlNaW4iLCJwYXJzZUludCIsIm1pbiIsInF0eU1heCIsIm1heCIsInJlZ2V4IiwiUmVnRXhwIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJrZXkiLCJtYXRjaCIsInByZXZlbnREZWZhdWx0IiwicXR5IiwidmFsdWUiLCJpc05hTiIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsInRhcmdldCIsImNsb3Nlc3QiLCJvcGVyYXRvciIsImRhdGFzZXQiLCJhY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9